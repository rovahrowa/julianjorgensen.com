@import 'variables';
:root {
  --videoWidthMedium: rem(854);
  --videoHeightMedium: rem(480);
  --videoWidthLarge: rem(1067);
  --videoHeightLarge: rem(600);
  --videoWidthXLarge: rem(1245);
  --videoHeightXLarge: rem(700);
}

.wrapper{
  position: relative;
  z-index: 3;
  display: flex;
  justify-content: center;
}

.videoWrapper {
  opacity: 0;
  position: fixed;
  pointer-events: none;
  z-index: 999;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  transform: scale(0.4);
  background-color: color(black alpha(74%));
  transition: all 0.3s;
  display: flex;
  align-items: center;
  justify-content: center;
  & .close {
    opacity: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: rem(30);
    width: rem(30);
    background-color: gray(40%);
    border-radius: 50%;
    position: absolute;
    transform: translate(50%, -50%);
    cursor: pointer;
    transition: all 0.2s;
    &:hover {
      background-color: gray(60%);
    }
    & svg {
      width: rem(18);
      height: rem(18);
    }

    top: calc(((100% - var(--videoHeightMedium)) / 2));
    right: calc(((100% - var(--videoWidthMedium)) / 2));
    @media (--large-and-up){
      top: calc(((100% - var(--videoHeightLarge)) / 2));
      right: calc(((100% - var(--videoWidthLarge)) / 2));
    }
    @media (--xlarge-and-up){
      top: calc(((100% - var(--videoHeightXLarge)) / 2));
      right: calc(((100% - var(--videoWidthXLarge)) / 2));
    }
  }
  & span {
    width: var(--videoWidthMedium);
    height: var(--videoHeightMedium);
    @media (--large-and-up){
      width: var(--videoWidthLarge);
      height: var(--videoHeightLarge);        
    }
    @media (--xlarge-and-up){
      width: var(--videoWidthXLarge);
      height: var(--videoHeightXLarge);
    }
  }
  & .player {
    pointer-events: none;
    width: 100%;
    height: 100%;
  }
}

.loading{
  display: none;
}

.loadVideo {
  & .videoWrapper {
    opacity: 1;
    transform: scale(1);
    transition-delay: 0s;
    pointer-events: auto;
    & .player {
      opacity: 0;
    }
  }
  &.isPlaying {
    & .player,
    & .close {
      opacity: 1;
      pointer-events: auto;
    }
    & .loading {
      display: none;
    }
  }
  & .loading{
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }  
}
